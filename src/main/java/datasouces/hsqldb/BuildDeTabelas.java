package datasouces.hsqldb;

import java.sql.SQLException;

import datasouces.hsqldb.config.ConexaoBD;

public class BuildDeTabelas extends ConexaoBD {

    // #region tabelaPerfil
    private final String tabelaPerfil = "CREATE TABLE IF NOT EXISTS PERFIL ("
            + "CODIGO INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY(START WITH 101, INCREMENT BY 1) ,"
            + "NOME VARCHAR(50) NOT NULL," + "DESCRICAO VARCHAR(100) NOT NULL," + "PRIMARY KEY(CODIGO));";// #endregion

    // #region tabelaUsuario
    private final String tabelaUsuario = "CREATE TABLE IF NOT EXISTS USUARIO ("
            + "ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1),"
            + "CPF VARCHAR(13) NOT NULL," + "NOME VARCHAR(50) NOT NULL," + "USERNAME VARCHAR(30) NOT NULL,"
            + "SENHA VARCHAR(100) NOT NULL," + "CODIGO_PERFIL INTEGER NOT NULL," + "TELEFONE VARCHAR(15) NOT NULL,"
            + "MATRICULA VARCHAR(5) NOT NULL," + "DATA_NASCIMENTO DATE NOT NULL," + "PRIMARY KEY(ID),"
            + "FOREIGN KEY(CODIGO_PERFIL) REFERENCES PERFIL(CODIGO));";// #endregion

    // #region sequenciaMatriculaTbUsuario
    private final String sequenciaMatriculaTbUsuario = "CREATE SEQUENCE IF NOT EXISTS MATRICULA_SEQ  AS BIGINT START WITH  1000 INCREMENT BY 5;";// #endregion

    //#region tabelaMedico
    private final String tabelaMedico = "CREATE TABLE IF NOT EXISTS MEDICO " +
    "( " +
    "    CRM                INT          GENERATED BY DEFAULT AS IDENTITY (START WITH 122 INCREMENT BY 1), " +
    "    NOME               VARCHAR(255) NOT NULL, " +
    "    ESPECIALIDADE      VARCHAR(255) NOT NULL, " +
    "    SEXO               CHAR(1)      NOT NULL, " +
    "    DATA_DE_NASCIMENTO DATE         NOT NULL, " +
    "    SALARIO            INT          NULL, " +
    "    PRIMARY KEY (CRM) " +
    "); ";//#endregion

    //#region tabelaPaciente
    private final String tabelaPaciente = "CREATE TABLE IF NOT EXISTS PACIENTE " +
    "( " +
    "    ID                 INT          GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1), " +
    "    CPF                VARCHAR(11)  NOT NULL, " +
    "    NOME               VARCHAR(255) NOT NULL, " +
    "    TELEFONE           VARCHAR(13)  NOT NULL, " +
    "    DATA_DE_NASCIMENTO DATE         NOT NULL, " +
    "    ENDERECO           VARCHAR(255) NOT NULL, " +
    "    SEXO               CHAR(1)      NOT NULL, " +
    "    PRIMARY KEY (ID) " +
    "); ";//#endregion

    //#region tabelaConsulta
    private final String tabelaConsulta = "CREATE TABLE IF NOT EXISTS CONSULTA " +
    "( " +
    "    ID                INT        GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1), " +
    "    ID_PACIENTE       INT        NOT NULL, " +
    "    CRM_MEDICO        INT        NOT NULL, " +
    "    ID_PLANO_DE_SAUDE INT        NOT NULL, " +
    "    SALA              VARCHAR(4) NOT NULL, " +
    "    DATA_DA_CONSULTA  DATE       NOT NULL, " +
    "    HORA_DA_CONSULTA  TIME       NOT NULL, " +
    "    PRIMARY KEY (ID, ID_PACIENTE, CRM_MEDICO, ID_PLANO_DE_SAUDE) " +
    "); ";//#endregion

    //#region tabelaPlanoDeSaude
    private final String tabelaPlanoDeSaude = "CREATE TABLE IF NOT EXISTS PLANO_DE_SAUDE " +
    "( " +
    "    ID           INT          GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1), " +
    "    CODIGO_PLANO VARCHAR(5)   NOT NULL, " +
    "    OPERADORA    VARCHAR(45)  NOT NULL, " +
    "    TELEFONE     VARCHAR(13)  NOT NULL, " +
    "    ENDERECO     VARCHAR(255) NOT NULL, " +
    "    REGISTRO_ANS VARCHAR(8)   NOT NULL, " +
    "    PRIMARY KEY (ID) " +
    "); ";//#endregion

    //#region insertMedico
    private final String insertMedico = "INSERT INTO MEDICO (NOME, ESPECIALIDADE, SEXO, DATA_DE_NASCIMENTO, SALARIO) VALUES " +
    "('VANESSA', 'CLINICA MEDICA', 'F', '1965-01-01', 52750.00), " +
    "('MICHAEL', 'OTORRINO', 'M', '1973-10-10', 41250.00), " +
    "('PAULO', 'PEDIATRA', 'M', '1975-04-05', 38250.00), " +
    "('FERNANDA', 'CARDIOLOGISTA', 'F', '1973-09-14', 32250.00), " +
    "('RUBENS', 'DERMATOLOGISTA', 'M', '1980-09-30', 36170.00), " +
    "('HELENA', 'PEDIATRA', 'F', '1973-06-01', 40300.00); ";//#endregion

    //#region insertPaciente
    private final String insertPaciente = "INSERT INTO PACIENTE (CPF, NOME, TELEFONE, DATA_DE_NASCIMENTO, ENDERECO, SEXO) VALUES " +
    "('85868936199', 'MARIA DO CARMO', '(61)985643322', '1945-06-16', " +
    "        'QN-07 CONJUNTO 02 CASA 03 AGUAS CLARAS - DF', 'F'), " +
    "('03388345577', 'LUIS CARLOS', '(61)34098766', '1993-08-10',  " +
    "        'SQS 1 10 BLOCO A APT 104 ASA SUL - DF', 'M'), " +
    "('01229877654', 'FABIO JUNIOR', '(61)58574583', '1975-12-29', " +
    "        'QNN-04 CONJUNTO A CASA 35 CEILANDIA NORTE - DF', 'M'), " +
    "('56788995567', 'ANA LUISA', '(61)976544563', '1983-09-01', " +
    "        'QS-09 CONJUNTO 05 CASA 22 NUCLEO BANDEIRANTE - DF', 'F'), " +
    "('22214557669', 'HAILTON MORAIS', '(61)776544987', '1986-09-22', " +
    "        'AVENIDA CENTRAL AE 1 9 LOTE A APARTAMENTO 102 AREAL-DF', 'M'), " +
    "('76812345567', 'KATIA AZEVEDO', '(61)33732775', '1973-06-01',  " +
    "        'QSD 87 CASA 32 TAGUATINGA SUL - DF', 'F'); ";//#endregion

    //#region insertConsulta
    private final String insertConsulta = "INSERT INTO CONSULTA (ID_PACIENTE, CRM_MEDICO, ID_PLANO_DE_SAUDE, SALA, DATA_DA_CONSULTA, HORA_DA_CONSULTA) VALUES " +
    "(5, 1, 127, 'A2', '2017-05-16', '16:30:00'), " +
    "(6, 2, 123, 'A7', '2016-08-10', '09:45:00'), " +
    "(4, 3, 124, 'B9', '2017-01-29', '10:00:00'), " +
    "(1, 4, 125, 'C4', '2017-06-01', '16:30:00'), " +
    "(3, 5, 122, 'A2', '2015-09-22', '17:10:00'), " +
    "(2, 6, 126, 'B3', '2015-05-01', '07:45:00'); ";//#endregion

    //#region insertPlanoDeSaude
    private final String insertPlanoDeSaude = "INSERT INTO PLANO_DE_SAUDE (CODIGO_PLANO, OPERADORA, TELEFONE, ENDERECO, REGISTRO_ANS) VALUES " +
    "('AM14', 'AMIL', '87563327', 'QN-03 CONJUNTO 05 CASA 23 AGUAS CLARAS - DF', 'ANS00133'), " +
    "('ME23', 'MEDIAL', '36098768', 'SQS 410 BLOCO F APT 101 ASA SUL - DF', 'ANS00135'), " +
    "('CAS01', 'CASSI', '58576554', 'QN0-04 CONJUNTO D CASA 35 CEILANDIA NORTE - DF', 'ANS00137'), " +
    "('ALL03', 'ALLIANCE', '976875433', 'QJ-10 CONJUNTO 1 1 CASA 01 NUCLEO BANDEIRANTE- DF', 'ANS00139'), " +
    "('BRA81', 'BRADESCO', '987774566', 'AVENIDA CENTRAL AE 1 9 LOTE A APARTAMENTO 102 AREAL-DF', 'ANS00141'), " +
    "('SUL67', 'SUL-AMERICA', '36554766', 'QSF 87 CASA 65 TAGUATINGA SUL - DF', 'ANS00143'); ";//#endregion

    // #region insertPerfis
    private final String insertPerfis = "INSERT INTO PERFIL( " + "NOME, DESCRICAO)VALUES "
            + "('ADMINISTRADOR','SUPER USUÁRIO')," + "('COMUM','USUÁRIO SOMENTE CONSULTA'),"
            + "('AVANÇADO','USUÁRIO CONSULTA E CADASTRA');";// #endregion

    // #region insertUsuario
    private final String insertUsuario = "insert into USUARIO "
            + "(CPF, NOME, USERNAME, SENHA, CODIGO_PERFIL, TELEFONE, MATRICULA, DATA_NASCIMENTO) values "
            + "('97310044320', 'Pedro Paul', 'ppaul', '12345', 101, '61995407997', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1989-05-22'), "
            + "('17526640517', 'Eduarda Manuela Nascimento', 'eduardam', '12345', 102, '21983746203', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1987-12-07'), "
            + "('79543174474', 'Lorenzo Benedito Diogo Bernardes', 'lorenzob', '12345', 102, '61997801499', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1979-05-24'), "
            + "('86067106019', 'Carolina Andrea da Conceição', 'carolina', '12345', 102, '22998865835', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1961-01-21'), "
            + "('45500436600', 'Tiago Vicente Corte Real', 'tiagovic', '12345', 102, '98992205051', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1997-02-26'), "
            + "('77707203380', 'Laís Natália Regina da Rosa', 'laisnata', '12345', 102, '62981473250', "
            + "NEXT VALUE FOR MATRICULA_SEQ, '1985-04-10'); ";// #endregion

    public void construirTabelas() throws SQLException {
        executarScript(tabelaPerfil);
        System.out.println("Tabela perfil criada");

        executarScript(tabelaUsuario);
        System.out.println("Tabela Usuário criada");
        
        executarScript(sequenciaMatriculaTbUsuario);
        System.out.println("Sequencia Matrícula Usuário criada");
        
        executarScript(tabelaMedico);
        System.out.println("Tabela Medico criada");

        executarScript(tabelaPaciente);
        System.out.println("Tabela Paciente criada");

        executarScript(tabelaConsulta);
        System.out.println("Tabela Consulta criada");

        executarScript(tabelaPlanoDeSaude);
        System.out.println("Tabela Plano de Saúde criada");

    }

    public void inserirDados() throws SQLException {
        executarScript(insertPerfis);
        System.out.println("Dados de perfil inseridos");

        executarScript(insertUsuario);
        System.out.println("Dados de usuário inseridos");

        executarScript(insertMedico);
        System.out.println("Dados de Medico inseridos");

        executarScript(insertPaciente);
        System.out.println("Dados de Paciente inseridos");

        executarScript(insertConsulta);
        System.out.println("Dados de Consulta inseridos");

        executarScript(insertPlanoDeSaude);
        System.out.println("Dados de Plano de Saúde inseridos");

    }

}
